cmake_minimum_required(VERSION 3.5.1)

set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0 -g3 -Wall -export-dynamic -fmessage-length=0")
set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -O0 -g3 -Wall -fmessage-length=0")

set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3 -export-dynamic  -fmessage-length=0")
set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -O3 -fmessage-length=0")

# set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0 -g3 -Wall -export-dynamic -fmessage-length=0 -fno-builtin-malloc -fno-builtin-calloc -fno-builtin-realloc -fno-builtin-free")
# set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -O0 -g3 -Wall -fmessage-length=0 -fno-builtin-malloc -fno-builtin-calloc -fno-builtin-realloc -fno-builtin-free")

# set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3 -export-dynamic  -fmessage-length=0 -fno-builtin-malloc -fno-builtin-calloc -fno-builtin-realloc -fno-builtin-free")
# set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -O3 -fmessage-length=0 -fno-builtin-malloc -fno-builtin-calloc -fno-builtin-realloc -fno-builtin-free")


# List all source: top_engine$ find ./ -type f -name "*.c"
add_library(jets SHARED
    ./src/jets/jets_global.cpp
    ./src/jets/jets_log.cpp
    ./src/jets/rdf/rdf_core/test.cpp
)

# configure a header file to pass some of the CMake settings to the source code
configure_file (
  "./src/jets/version.h.in"
  "./src/jets/version.h"
)

# List all directories: $ find ./ -type d
target_include_directories(jets PUBLIC
    ${CMAKE_CURRENT_BINARY_DIR}/src
    ../abseil-cpp
    ./src
)

# Linking
target_link_libraries(jets
  # jemalloc
  boost_filesystem
  boost_regex
  boost_system
  boost_program_options
  boost_log
)


install(TARGETS jets
        DESTINATION lib)

# find all header files: $ find ./ -type f -name "*.h"
# find directories: $ find ./ -type d -print
install(DIRECTORY
        src/jets/
        DESTINATION include/jets
        FILES_MATCHING PATTERN "*.h"
)
